name: Build

on:
  push:
    branches: [ main ]
    tags: [ "*" ]
    paths-ignore: [ "README.md" ]

  pull_request:
    branches: [ main ]

jobs:
  buildcore:
    name: Build Go Miner Binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master

      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Prepare Environment
        working-directory: ./consominer-go
        run: |
          go env -w GOOS=linux
          go mod download

      - name: Build Arm Binary
        working-directory: ./consominer-go
        run: |
          go env -w GOARCH=arm
          go build -o output/miner_arm .

      - name: Build Arm64 Binary
        working-directory: ./consominer-go
        run: |
          go env -w GOARCH=arm64
          go build -o output/miner_arm64 .

      - name: Save the Arm-Binary
        uses: actions/upload-artifact@v3
        with:
          name: Miner-Arm
          path: consominer-go/output/miner_arm

      - name: Save the Arm64-Binary
        uses: actions/upload-artifact@v3
        with:
          name: Miner-Arm64
          path: consominer-go/output/miner_arm64

  build:
    name: Build Release version
    runs-on: ubuntu-latest
    needs: buildcore

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download ARM64 Binary
      uses: actions/download-artifact@v3
      with:
        name: Miner-Arm64
        path: app/src/main/assets/miner/miner_arm64

    - name: Download ARM64 Binary
      uses: actions/download-artifact@v3
      with:
        name: Miner-Arm
        path: app/src/main/assets/miner/miner_arm

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: adopt

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: assembleDebug

    - name: List Output Release
      run: ls -al app/build/outputs/apk/debug

    - name: Upload the Release binary
      uses: actions/upload-artifact@v2
      with:
        name: MobileMiner-Release
        path: app/build/outputs/apk/debug/app-debug.apk

  package-release:
    if: contains(github.ref, '/tags/')

    name: Package and create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

    - name: Download the Release binary
      uses: actions/download-artifact@v2
      
    - name: List files
      run: ls -alF MobileMiner-Release

    - name: Create release files
      run: |
        cd MobileMiner-Release
        mv app-debug.apk MobileMiner-${{ steps.vars.outputs.tag }}.apk
        zip -r MobileMiner-${{ steps.vars.outputs.tag }}.zip MobileMiner-${{ steps.vars.outputs.tag }}.apk
    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        name: MobileMiner ${{ steps.vars.outputs.tag }}
        body_path: release-notes.md
        files: |
          MobileMiner-Release/*.apk
          MobileMiner-Release/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}